Inspecting 66 files
CCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCECCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
source 'https://rubygems.org'
^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/admins/omniauth_callbacks_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admins::OmniauthCallbacksController < Devise::OmniauthCallbacksController
^
app/controllers/admins/sessions_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admins::SessionsController < Devise::SessionsController
^
app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationController < ActionController::Base
^
app/controllers/dashboards_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class DashboardsController < ApplicationController
^
app/controllers/event_types_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventTypesController < ApplicationController
^
app/controllers/event_types_controller.rb:50:17: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @event_type.destroy
                ^^^^^^^
app/controllers/events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventsController < ApplicationController
^
app/controllers/events_controller.rb:50:12: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @event.destroy
           ^^^^^^^
app/controllers/roles_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class RolesController < ApplicationController
^
app/controllers/roles_controller.rb:50:11: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @role.destroy
          ^^^^^^^
app/controllers/user_events_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UserEventsController < ApplicationController
^
app/controllers/user_events_controller.rb:50:17: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @user_event.destroy
                ^^^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:5:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #search index
  ^^^^^^^^^^^^^
app/controllers/users_controller.rb:8:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    if params[:search_by_first_name] && params[:search_by_first_name] != ""
                                                                         ^^
app/controllers/users_controller.rb:9:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      @users = @users.where("first_name like ?", "%#{params[:search_by_first_name]}%")
                            ^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:11:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/users_controller.rb:33:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
app/controllers/users_controller.rb:35:3: C: [Correctable] Layout/EmptyLineBetweenDefs: Expected 1 empty line between method definitions; found 2.
  def show; 
  ^^^^^^^^
app/controllers/users_controller.rb:35:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show;  ...
  ^^^^^^^^^^
app/controllers/users_controller.rb:35:11: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
  def show; 
          ^
app/controllers/users_controller.rb:35:12: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  def show; 
           ^
app/controllers/users_controller.rb:44:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit; ...
  ^^^^^^^^^
app/controllers/users_controller.rb:44:11: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
  def edit;
          ^
app/controllers/users_controller.rb:45:4: W: [Correctable] Layout/DefEndAlignment: end at 45, 3 is not aligned with def at 44, 2.
   end
   ^^^
app/controllers/users_controller.rb:81:11: C: [Correctable] Rails/SaveBang: Use destroy! instead of destroy if the return value is not checked.
    @user.destroy
          ^^^^^^^
app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationHelper
^
app/helpers/event_types_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module EventTypesHelper
^
app/helpers/events_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module EventsHelper
^
app/helpers/roles_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module RolesHelper
^
app/helpers/user_events_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UserEventsHelper
^
app/helpers/users_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module UsersHelper
^
app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationJob < ActiveJob::Base
^
app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationMailer < ActionMailer::Base
^
app/models/admin.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin < ApplicationRecord
^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Event < ApplicationRecord
^
app/models/event.rb:2:3: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
  has_many :event_types, class_name: 'event_type', foreign_key: 'event_type_id'
  ^^^^^^^^
app/models/event.rb:2:3: C: Rails/InverseOf: Specify an :inverse_of option.
  has_many :event_types, class_name: 'event_type', foreign_key: 'event_type_id'
  ^^^^^^^^
app/models/event_type.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EventType < ApplicationRecord
^
app/models/role.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# basic role model, validates that all inputs are in
^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
app/models/user.rb:2:3: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
  has_many :roles, class_name: 'role', foreign_key: 'role_id'
  ^^^^^^^^
app/models/user.rb:2:3: C: Rails/InverseOf: Specify an :inverse_of option.
  has_many :roles, class_name: 'role', foreign_key: 'role_id'
  ^^^^^^^^
app/models/user_event.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UserEvent < ApplicationRecord
^
app/views/event_types/_event_type.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract!(event_type, :id, :points, :created_at, :updated_at)
^
app/views/event_types/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array!(@event_types, partial: 'event_types/event_type', as: :event_type)
^
app/views/event_types/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial!('event_types/event_type', event_type: @event_type)
^
app/views/events/_event.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract!(event, :id, :start, :end, :status, :type_id, :created_at, :updated_at)
^
app/views/events/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array!(@events, partial: 'events/event', as: :event)
^
app/views/events/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial!('events/event', event: @event)
^
app/views/roles/_role.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract!(role, :id, :role_name, :create_event, :delete_event, :edit_event, :delete_member, :promote_member, :created_at, :updated_at)
^
app/views/roles/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array!(@roles, partial: 'roles/role', as: :role)
^
app/views/roles/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial!('roles/role', role: @role)
^
app/views/user_events/_user_event.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract!(user_event, :id, :user_id, :event_id, :created_at, :updated_at)
^
app/views/user_events/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array!(@user_events, partial: 'user_events/user_event', as: :user_event)
^
app/views/user_events/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial!('user_events/user_event', user_event: @user_event)
^
app/views/users/_user.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract!(user, :id, :first_name, :last_name, :uin, :email, :phone_number, :dob, :points, :role_id, :created_at, :updated_at)
^
app/views/users/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array!(@users, partial: 'users/user', as: :user)
^
app/views/users/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial!('users/user', user: @user)
^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is used by Rack-based servers to start the application.
^
db/seeds.rb:2:3: E: Lint/Syntax: unexpected token $end
(Using Ruby 2.7 parser; configure using TargetRubyVersion parameter, under AllCops)
spec/feature/integration_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# location: spec/feature/integration_spec.rb
^
spec/feature/integration_spec.rb:4:1: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
RSpec.describe 'Creating a user', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:5:3: C: [Correctable] RSpec/Capybara/FeatureMethods: Use it instead of scenario.
  scenario 'valid inputs' do
  ^^^^^^^^
spec/feature/integration_spec.rb:7:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "user[first_name]", with: 'harry'
            ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:8:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "user[last_name]", with: 'potter'
            ^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:9:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "user[uin]", with: '730303030'
            ^^^^^^^^^^^
spec/feature/integration_spec.rb:10:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "user[email]", with: 'student@tamu.edu'
            ^^^^^^^^^^^^^
spec/feature/integration_spec.rb:11:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "user[phone_number]", with: '1234567898'
            ^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:12:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in "user[dob]", with: '2003-10-10'
            ^^^^^^^^^^^
spec/feature/integration_spec.rb:15:5: C: [Correctable] Style/MethodCallWithArgsParentheses: Use parentheses for method calls with arguments.
    expect(page).to have_content('harry')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:19:1: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).
#RSpec.describe 'Creating an Event', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:19:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#RSpec.describe 'Creating an Event', type: :feature do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:20:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 6).
    #scenario 'valid inputs' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:20:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #scenario 'valid inputs' do
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:21:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #visit new_event_path
      ^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:22:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #fill_in "event[start]", with: '2023-10-10'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:23:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #fill_in "event[end]", with: '2023-10-11'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:24:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #fill_in "event[type_id]", with: '1'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:25:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #fill_in "event[status]", with: 'ongoing'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:26:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #click_on 'Create Event'
      ^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:27:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #visit events_path
      ^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:28:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 4).
      #expect(page).to have_content('2023-10-10')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:28:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #expect(page).to have_content('2023-10-10')
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/integration_spec.rb:29:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 2).
    #end
    ^^^^
spec/feature/integration_spec.rb:29:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #end
    ^^^^
spec/feature/integration_spec.rb:30:3: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).
  #end
  ^^^^
spec/feature/integration_spec.rb:30:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #end
  ^^^^
spec/feature/integration_spec.rb:31:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:34:25: C: Rails/FilePath: Prefer Rails.root.join('path/to').
  config.fixture_path = "#{::Rails.root}/spec/fixtures"
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# location: spec/unit/unit_spec.rb
^
spec/unit/unit_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe(User, type: :model) do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:6:140: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
    described_class.new(first_name: 'Joe', last_name: 'Shmoe', uin: '730303036', phone_number: '8324344445', email: 'student@tamu.edu', dob:'2003-10-10', points:'3', role_id:'1')
                                                                                                                                           ^
spec/unit/unit_spec.rb:6:161: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
    described_class.new(first_name: 'Joe', last_name: 'Shmoe', uin: '730303036', phone_number: '8324344445', email: 'student@tamu.edu', dob:'2003-10-10', points:'3', role_id:'1')
                                                                                                                                                                ^
spec/unit/unit_spec.rb:6:174: C: [Correctable] Layout/SpaceAfterColon: Space missing after colon.
    described_class.new(first_name: 'Joe', last_name: 'Shmoe', uin: '730303036', phone_number: '8324344445', email: 'student@tamu.edu', dob:'2003-10-10', points:'3', role_id:'1')
                                                                                                                                                                             ^
spec/unit/unit_spec.rb:10:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:14:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.first_name = nil
    ^^^^^^^
spec/unit/unit_spec.rb:15:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:19:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.last_name = nil
    ^^^^^^^
spec/unit/unit_spec.rb:20:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:24:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.uin = nil
    ^^^^^^^
spec/unit/unit_spec.rb:25:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:29:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.email = nil
    ^^^^^^^
spec/unit/unit_spec.rb:30:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:34:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.dob = nil
    ^^^^^^^
spec/unit/unit_spec.rb:35:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:37:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/unit/unit_spec.rb:46:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:50:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.user_id = nil
    ^^^^^^^
spec/unit/unit_spec.rb:51:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:55:5: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    subject.event_id = nil
    ^^^^^^^
spec/unit/unit_spec.rb:56:12: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
    expect(subject).not_to(be_valid)
           ^^^^^^^
spec/unit/unit_spec.rb:64:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:66:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:68:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:70:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.start = nil
      ^^^^^^^
spec/unit/unit_spec.rb:71:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:75:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.end = nil
      ^^^^^^^
spec/unit/unit_spec.rb:76:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:80:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.type_id = nil
      ^^^^^^^
spec/unit/unit_spec.rb:81:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:85:9: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
        subject.status = nil
        ^^^^^^^
spec/unit/unit_spec.rb:86:16: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
        expect(subject).not_to(be_valid)
               ^^^^^^^
spec/unit/unit_spec.rb:87:7: C: [Correctable] Layout/BlockAlignment: end at 87, 6 is not aligned with it 'event is not valid without a status' do at 84, 4.
      end
      ^^^
spec/unit/unit_spec.rb:88:3: C: [Correctable] Layout/BlockAlignment: end at 88, 2 is not aligned with RSpec.describe(Event, type: :model) do at 60, 0.
  end
  ^^^
spec/unit/unit_spec.rb:90:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  RSpec.describe(EventType, type: :model) do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:90:3: C: RSpec/RepeatedExampleGroupBody: Repeated describe block body on line(s) [105]
  RSpec.describe(EventType, type: :model) do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:90:3: C: RSpec/RepeatedExampleGroupDescription: Repeated describe block description on line(s) [105]
  RSpec.describe(EventType, type: :model) do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:94:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:96:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:98:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:100:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.points = nil
      ^^^^^^^
spec/unit/unit_spec.rb:101:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:105:3: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
  RSpec.describe(EventType, type: :model) do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:105:3: C: RSpec/RepeatedExampleGroupBody: Repeated describe block body on line(s) [90]
  RSpec.describe(EventType, type: :model) do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:105:3: C: RSpec/RepeatedExampleGroupDescription: Repeated describe block description on line(s) [90]
  RSpec.describe(EventType, type: :model) do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:109:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:111:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).to(be_valid)
             ^^^^^^^
spec/unit/unit_spec.rb:113:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:115:7: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      subject.points = nil
      ^^^^^^^
spec/unit/unit_spec.rb:116:14: C: RSpec/NamedSubject: Name your test subject if you need to reference it explicitly.
      expect(subject).not_to(be_valid)
             ^^^^^^^
test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/controllers/event_types_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/controllers/events_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/controllers/roles_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/controllers/user_events_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/controllers/users_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/admin_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/event_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/event_type_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/role_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/user_event_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/models/user_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'test_helper'
^
test/system/event_types_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'application_system_test_case'
^
test/system/events_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'application_system_test_case'
^
test/system/roles_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'application_system_test_case'
^
test/system/user_events_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'application_system_test_case'
^
test/system/users_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'application_system_test_case'
^
test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ENV['RAILS_ENV'] ||= 'test'
^

66 files inspected, 165 offenses detected, 123 offenses autocorrectable
